@import "compass/reset";

@import "compass/css3/text-shadow";
@import "compass/css3/transition";
@import "compass/css3/transform";

@import "modules/animation";
@import "modules/box";


html, body {
  height: 100%;
}

.scene {
  width: 100%;
  height: 100%;

  @include perspective(1000px);
  @include perspective-origin(center top);
  @include transform-style(preserve-3d);
}

.container {
  @extend .scene;

  * {
    @include transition(all 2s);
  }

  .rotateX:active {
    ~ .building-test {
      @include transform(rotateX(-360deg));
    }
  }

  .rotateY:active {
    ~ .building-test {
      @include transform(rotateY(-360deg));
    }
  }
}

@mixin building($width, $height, $depth) {
  $halfWidth:  0.5 * $width;
  $halfHeight: 0.5 * $height;
  $halfDepth:  0.5 * $depth;

  @include transform-style(preserve-3d);

  .face {
    position: absolute;
  }

  .top {
    width: $width;
    height: $depth;

    margin-left: -$halfWidth;
    margin-top:  -$halfDepth;

    @include transform(translate3d(0, -$height, 0) rotateX( 90deg));
  }

  .back, .front {
    width:  $width;
    height: $height;

    margin-left: -$halfWidth;
    margin-top:  -$halfHeight;
  }

  .back  { @include transform(translate3d(0, -$halfHeight, -$halfDepth) rotateY(180deg)); }
  .front { @include transform(translate3d(0, -$halfHeight,  $halfDepth) rotateY(  0deg)); }

  .left, .right {
    width:  $depth;
    height: $height;

    margin-left: -$halfDepth;
    margin-top:  -$halfHeight;
  }

  .left  { @include transform(translate3d(-$halfWidth, -$halfHeight, 0) rotateY(-90deg)); }
  .right { @include transform(translate3d( $halfWidth, -$halfHeight, 0) rotateY( 90deg)); }
}

@mixin building-edged-roof($width, $height, $depth, $edgeWidth, $edgeHeight) {
  @include building($width, $height, $depth);

  $widthInterior: $width - 2 * $edgeWidth;
  $depthInterior: $depth - 2 * $edgeWidth;

  $halfWidthInterior: 0.5 * $widthInterior;
  $halfDepthInterior: 0.5 * $depthInterior;

  $halfWidth: 0.5 * $width;
  $halfDepth: 0.5 * $depth;

  $halfEdgeWidth:  0.5 * $edgeWidth;
  $halfEdgeHeight: 0.5 * $edgeHeight;

  .top {
    width:  $widthInterior;
    height: $depthInterior;

    margin-left: -0.5 * $widthInterior;
    margin-top:  -0.5 * $depthInterior;

    @include transform(translate3d(0, -$height + $edgeHeight, 0) rotateX( 90deg));
  }

  .front-top,
  .back-top {
    width:  $width;
    height: $edgeWidth;

    margin-left: -$halfWidth;
    margin-top:  -$halfEdgeWidth;
  }

  .front-top {
    @include transform(translate3d(0, -$height, $halfDepthInterior + $halfEdgeWidth) rotateX(90deg));
  }

  .back-top {
    @include transform(translate3d(0, -$height, -$halfDepthInterior - $halfEdgeWidth) rotateX(90deg));
  }

  .left-top,
  .right-top {
    width:  $depth - $edgeWidth;
    height: $edgeWidth;

    margin-left: $halfDepth - $halfEdgeWidth;
    margin-top:  $halfEdgeWidth;
  }

  .left-top {}
  .right-top {}

  .front-interior {}
  .back-interior {}

  .left-interior {}
  .right-interior {}
}

@mixin simple-face-shading() {
  .top    { background-color: rgba(192, 192, 192, 0.75); }
  .front  { background-color: rgba(144, 144, 144, 0.75); }
  .right  { background-color: rgba( 96,  96,  96, 0.75); }
  .back   { background-color: rgba( 64,  64,  64, 0.75); }
  .left   { background-color: rgba( 32,  32,  32, 0.75); }
  .bottom { background-color: rgba(  0,   0,   0, 0.75); }
}

.building-test {
  @include box(300px, 200px, 150px);
  @include simple-face-shading();

  position: absolute;
  top: 50%;
  left: 50%;

  &:hover {
    @include transform(rotate3d(1, 1, 1, 360deg));
  }

  .face {
    display: flex;
    align-items: center;
    justify-content: center;

    color: white;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 32px;
    text-transform: uppercase;
    @include text-shadow(0 2px 0 rgba(0, 0, 0, 0.3));

    @include backface-visibility(hidden);
  }

  .top:after { content: "top"; }
  .bottom:after { content: "bottom";  }
  .front:after { content: "front";  }
  .back:after { content: "back";  }
  .left:after { content: "left";  }
  .right:after { content: "right";  }
}

.buildings {
  @include transform(translate3d(25%, 0, 0) rotateX(-10deg) rotateY(-60deg));
  @include transition(all 2s);
  @include perspective(2000px);
  margin-bottom: -256px;

  @include simple-face-shading();

  &:hover {
    @include transform(translate3d(25%, 0, 0) rotateX(-10deg) rotateY(60deg));
  }

  .building {
    @include box(30px, 50px, 30px);
    position: absolute;
  }

  @for $i from 0 to 4 {
    @for $j from 0 to 4 {
      .building:nth-of-type(#{$i * 4 + $j + 1}) {
        @include transform(translate3d($i * 60px, 0, $j * 60px));

      }
    }
  }

  .ground {
    @include box(500px, 8px, 500px);
    position: absolute;
    @include transform(translate3d(100px, 30px, 100px));

    .top, .bottom {
      background-color: #333;
    }

    .front, .back, .left, .right {
      background-color: #444;
    }
  }
}

.building-sans-bottom {
  @include simple-face-shading();

  * {
    @include transition(all 1s);
  }

  .building {
    @include building(300px, 200px, 150px);
    @include transform(translate3d(50%, 0, 0) rotateX(-10deg));
  }

  .building-edged-roof {
    @include building-edged-roof(300px, 200px, 150px, 20px, 20px);
    @include transform(translate3d(50%, 300px, 0) rotateX(-10deg) rotateY(0deg));
    @include transform-origin(0, 0, 0);

    .front-top { @extend .top }
    .back-top  { @extend .top }
    .left-top  { @extend .top }
    .right-top { @extend .top }

    &:hover {
      @include transform(translate3d(50%, 300px, 0) rotateX(-30deg) rotateY(360deg));
    }
  }
}
