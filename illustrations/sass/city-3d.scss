@import "compass/reset";

@import "compass/css3/text-shadow";
@import "compass/css3/transition";
@import "compass/css3/transform";

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} { @content; }
  @keyframes #{$name} { @content; }
}

@mixin animation($animation) {
  -webkit-animation: #{$animation};
          animation: #{$animation};
}

/**
 * Creates a box centered at (0, 0, 0) with dimension
 * $width, $height, and $depth.
 *
 * Requires elements with classes for six faces:
 *  top, bottom,
 *  front, back,
 *  left, right
 */
@mixin box($width, $height, $depth) {
  $halfWidth:  0.5 * $width;
  $halfHeight: 0.5 * $height;
  $halfDepth:  0.5 * $depth;

  @include transform-style(preserve-3d);

  .top, .bottom, .front, .back, .left, .right {
    position: absolute;
  }

  .top, .bottom {
    width:  $width;
    height: $depth;

    margin-left: -$halfWidth;
    margin-top:  -$halfDepth;
  }

  .top    { @include transform(translate3d(0, -$halfHeight, 0) rotateX( 90deg)); }
  .bottom { @include transform(translate3d(0,  $halfHeight, 0) rotateX(-90deg)); }

  .back, .front {
    width:  $width;
    height: $height;

    margin-left: -$halfWidth;
    margin-top:  -$halfHeight;
  }

  .back  { @include transform(translate3d(0, 0, -$halfDepth) rotateY(180deg)); }
  .front { @include transform(translate3d(0, 0,  $halfDepth) rotateY(  0deg)); }

  .left, .right {
    width:  $depth;
    height: $height;

    margin-left: -$halfDepth;
    margin-top:  -$halfHeight;
  }

  .left  { @include transform(translate3d(-$halfWidth, 0, 0) rotateY(-90deg)); }
  .right { @include transform(translate3d( $halfWidth, 0, 0) rotateY( 90deg)); }
}

html, body {
  height: 100%;
}

.scene {
  width: 100%;
  height: 100%;

  @include perspective(1000px);
  @include perspective-origin(center top);
  @include transform-style(preserve-3d);
}

.container {
  @extend .scene;

  * {
    @include transition(all 2s);
  }

  .rotateX:active {
    ~ .building-test {
      @include transform(rotateX(-360deg));
    }
  }

  .rotateY:active {
    ~ .building-test {
      @include transform(rotateY(-360deg));
    }
  }
}

.building-test {
  @include box(300px, 200px, 150px);

  position: absolute;
  top: 50%;
  left: 50%;

  &:hover {
    @include transform(rotate3d(1, 1, 1, 360deg));
  }

  .top    { background-color: rgba(192, 192, 192, 0.75); }
  .front  { background-color: rgba(144, 144, 144, 0.75); }
  .right  { background-color: rgba( 96,  96,  96, 0.75); }
  .back   { background-color: rgba( 64,  64,  64, 0.75); }
  .left   { background-color: rgba( 32,  32,  32, 0.75); }
  .bottom { background-color: rgba(  0,   0,   0, 0.75); }

  .top, .bottom, .front, .back, .left, .right {
    display: flex;
    align-items: center;
    justify-content: center;

    color: white;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 32px;
    text-transform: uppercase;
    @include text-shadow(0 2px 0 rgba(0, 0, 0, 0.3));

    @include backface-visibility(hidden);
  }

  .top:after { content: "top"; }
  .bottom:after { content: "bottom";  }
  .front:after { content: "front";  }
  .back:after { content: "back";  }
  .left:after { content: "left";  }
  .right:after { content: "right";  }
}

.buildings {
  @include transform(translate3d(25%, 0, 0) rotateX(-10deg) rotateY(-60deg));
  @include transition(all 2s);
  @include perspective(2000px);

  &:hover {
    @include transform(translate3d(25%, 0, 0) rotateX(-10deg) rotateY(60deg));
  }

  .building {
    @include box(30px, 50px, 30px);
    position: absolute;
  }

  @for $i from 0 to 4 {
    @for $j from 0 to 4 {
      .building:nth-of-type(#{$i * 4 + $j + 1}) {
        @include transform(translate3d($i * 60px, 0, $j * 60px));

        .top    { background-color: rgba(192, 192, 192, 0.75); }
        .front  { background-color: rgba(144, 144, 144, 0.75); }
        .right  { background-color: rgba( 96,  96,  96, 0.75); }
        .back   { background-color: rgba( 64,  64,  64, 0.75); }
        .left   { background-color: rgba( 32,  32,  32, 0.75); }
        .bottom { background-color: rgba(  0,   0,   0, 0.75); }
      }
    }
  }

  .ground {
    @include box(500px, 8px, 500px);
    position: absolute;
    @include transform(translate3d(100px, 30px, 100px));

    .top, .bottom {
      background-color: #333;
    }

    .front, .back, .left, .right {
      background-color: #444;
    }
  }
}


$chest-width: 80px;
$chest-height: 100px;
$chest-depth: 35px;

$head-width: 40px;
$head-height: 40px;
$head-depth: 40px;

$upper-arm-width: 20px;
$upper-arm-height: 60px;
$upper-arm-depth: 20px;

$lower-arm-width: 20px;
$lower-arm-height: 40px;
$lower-arm-depth: 20px;

$hand-width: 20px;
$hand-height: 20px;
$hand-depth: 20px;

$hips-width: 60px;
$hips-height: 40px;
$hips-depth: 35px;

$upper-leg-width: 25px;
$upper-leg-height: 50px;
$upper-leg-depth: 25px;

$lower-leg-width: 25px;
$lower-leg-height: 70px;
$lower-leg-depth: 25px;

$foot-width: 30px;
$foot-height: 15px;
$foot-depth: 50px;

// Translations.
$t-body: translate3d(0, 0, 0);
$t-head: translate3d(0, -80px, 0);

$t-upper-arm: translate3d(0, 0, 0);
$t-lower-arm: translate3d(0, 60px, 0);
$t-hand: translate3d(0, 40px, 0);

$t-hips: translate3d(0, 80px, 0);
$t-upper-leg: translate3d(0, 55px, 0);
$t-lower-leg: translate3d(0, 70px, 0);
$t-foot: translate3d(0, 50px, 10px);

$t-arm-left:  translate3d(-60px, 0, 0);
$t-arm-right: translate3d( 60px, 0, 0);

$t-leg-left:  translate3d(-25px, 0, 0);
$t-leg-right: translate3d( 25px, 0, 0);

.robot {
  @include perspective(2000px);
  @include perspective-origin(left top);
  @include transform(translate3d(300px, 0, 0));
}

.body {
  @include transform($t-body rotateY(0));
  @include transform-style(preserve-3d);

  *, & {
    @include transition(all 1s);
  }

  &:hover {
    @include transform($t-body rotateY(40deg));

    .chest { @include transform(rotateY(10deg)); }

    .head { @include transform($t-head rotateY(-30deg)); }

    .arm-right {
      .upper-arm { @include transform($t-upper-arm rotateX(30deg)); }
      .lower-arm { @include transform($t-lower-arm rotateX(30deg)); }
      .hand { @include transform($t-hand rotateX(20deg)); }
    }

    .arm-left {
      .upper-arm { @include transform($t-upper-arm rotateX(-50deg)); }
      .lower-arm { @include transform($t-lower-arm rotateX(30deg)); }
      .hand { @include transform($t-hand rotateX(20deg)); }
    }

    .hips { @include transform($t-hips rotateY(-30deg)); }

    .leg-right {
      .upper-leg { @include transform($t-upper-leg rotateX(-30deg)); }
      .lower-leg { @include transform($t-lower-leg rotateX(-20deg)); }
    }

    .leg-left {
      .upper-leg { @include transform($t-upper-leg rotateX(40deg)); }
      .lower-leg { @include transform($t-lower-leg rotateX(-40deg)); }
    }
  }

  .top    { background-color: rgba(255, 0, 0, 0.25); }
  .front  { background-color: rgba(192, 0, 0, 0.25); }
  .right  { background-color: rgba(128, 0, 0, 0.25); }
  .back   { background-color: rgba( 96, 0, 0, 0.25); }
  .left   { background-color: rgba( 64, 0, 0, 0.25); }
  .bottom { background-color: rgba( 32, 0, 0, 0.25); }

  .chest {
    @include box($chest-width, $chest-height, $chest-depth);
    @include transform-origin(0 0 0);
  }

  .head {
    @include box($head-width, $head-height, $head-depth);
    @include transform($t-head);
    @include transform-origin(0 0 0);
  }

  .arm {
    @include transform-style(preserve-3d);
  }

  .upper-arm {
    @include box($upper-arm-width, $upper-arm-height, $upper-arm-depth);
    @include transform($t-upper-arm);
    @include transform-origin(0 -0.5 * $upper-arm-height 0);
  }

  .lower-arm {
    @include box($lower-arm-width, $lower-arm-height, $lower-arm-depth);
    @include transform($t-lower-arm);
    @include transform-origin(0 -0.5 * $lower-arm-height 0);
  }

  .hand {
    @include box($hand-width, $hand-height, $hand-depth);
    @include transform($t-hand);
    @include transform-origin(0 -0.5 * $hand-height 0);
  }

  .arm-left  { @include transform($t-arm-left); }
  .arm-right { @include transform($t-arm-right); }

  .hips {
    @include box($hips-width, $hips-height, $hips-depth);
    @include transform($t-hips);
    @include transform-origin(0 -0.5 * $hips-height 0);
  }

  .leg {
    @include transform-style(preserve-3d);
  }

  .upper-leg {
    @include box($upper-leg-width, $upper-leg-height, $upper-leg-depth);
    @include transform($t-upper-leg);
    @include transform-origin(0 -0.5 * $upper-leg-height 0);
  }

  .lower-leg {
    @include box($lower-leg-width, $lower-leg-height, $lower-leg-depth);
    @include transform($t-lower-leg);
    @include transform-origin(0 -0.5 * $lower-leg-height 0);
  }

  .foot {
    @include box($foot-width, $foot-height, $foot-depth);
    @include transform($t-foot);
    @include transform-origin(0 -0.5 * $foot-height 0);
  }

  .leg-left  { @include transform($t-leg-left); }
  .leg-right { @include transform($t-leg-right); }
}
