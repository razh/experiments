@import "box";

/**
 * A building is a box without a bottom face. Unlike a box, which is centered on
 * the origin, the building's bottom has a y-coordinate of 0.
 */
@mixin building($width, $height, $depth) {
  @include box($width, $height, $depth);

  $halfWidth:  0.5 * $width;
  $halfHeight: 0.5 * $height;
  $halfDepth:  0.5 * $depth;

  .top {
    @include transform(translate3d(0, -$height, 0) rotateX(90deg));
  }

  .back  { @include transform(translate3d(0, -$halfHeight, -$halfDepth) rotateY(180deg)); }
  .front { @include transform(translate3d(0, -$halfHeight,  $halfDepth) rotateY(  0deg)); }

  .left  { @include transform(translate3d(-$halfWidth, -$halfHeight, 0) rotateY(-90deg)); }
  .right { @include transform(translate3d( $halfWidth, -$halfHeight, 0) rotateY( 90deg)); }
}

/**
 * A building with an edged roof insets the top edge and adds
 * border faces (top and interior sides).
 */
@mixin building-edged-roof($width, $height, $depth, $edgeWidth, $edgeHeight) {
  @include building($width, $height, $depth);

  $widthInterior: $width - 2 * $edgeWidth;
  $depthInterior: $depth - 2 * $edgeWidth;

  $halfWidthInterior: 0.5 * $widthInterior;
  $halfDepthInterior: 0.5 * $depthInterior;

  $halfWidth: 0.5 * $width;
  $halfDepth: 0.5 * $depth;

  $halfEdgeWidth:  0.5 * $edgeWidth;
  $halfEdgeHeight: 0.5 * $edgeHeight;

  .top {
    width:  $widthInterior;
    height: $depthInterior;

    margin-left: -$halfWidthInterior;
    margin-top:  -$halfDepthInterior;

    @include transform(translate3d(0, -$height + $edgeHeight, 0) rotateX(90deg));
  }


  // Faces on the top of the buildng edge.
  $x-top: $halfWidth - $halfEdgeWidth;
  $z-top: $halfDepth - $halfEdgeWidth;

  .back-top,
  .front-top {
    width:  $width;
    height: $edgeWidth;

    margin-left: -$halfWidth;
    margin-top:  -$halfEdgeWidth;
  }

  .back-top  { @include transform(translate3d(0, -$height, -$z-top) rotateX(90deg) rotateZ(180deg)); }
  .front-top { @include transform(translate3d(0, -$height,  $z-top) rotateX(90deg) rotateZ(  0deg)); }

  .left-top,
  .right-top {
    width:  $depthInterior;
    height: $edgeWidth;

    margin-left: -$halfDepthInterior;
    margin-top:  -$halfEdgeWidth;
  }

  .left-top  { @include transform(translate3d(-$x-top, -$height, 0) rotateX(90deg) rotateZ( 90deg)); }
  .right-top { @include transform(translate3d( $x-top, -$height, 0) rotateX(90deg) rotateZ(-90deg)); }


  // Faces on the interior of the building edge.
  $y-interior: -$height + $halfEdgeHeight;

  .back-interior,
  .front-interior {
    width:  $widthInterior;
    height: $edgeHeight;

    margin-left: -$halfWidthInterior;
    margin-top:  -$halfEdgeHeight;
  }

  .back-interior  { @include transform(translate3d(0, $y-interior, -$halfDepthInterior) rotateY(  0deg)); }
  .front-interior { @include transform(translate3d(0, $y-interior,  $halfDepthInterior) rotateY(180deg)); }

  .left-interior,
  .right-interior {
    width:  $depthInterior;
    height: $edgeHeight;

    margin-left: -$halfDepthInterior;
    margin-top:  -$halfEdgeHeight;
  }

  .left-interior  { @include transform(translate3d(-$halfWidthInterior, $y-interior, 0) rotateY( 90deg)); }
  .right-interior { @include transform(translate3d( $halfWidthInterior, $y-interior, 0) rotateY(-90deg)); }
}

/**
 * A building missing the back left corner.
 */
@mixin building-missing-corner($width, $height, $depth, $clipWidth, $clipDepth) {
  @include building($width, $height, $depth);

  $halfWidth:  0.5 * $width;
  $halfHeight: 0.5 * $height;
  $halfDepth:  0.5 * $depth;

  $shortWidth: $width - $clipWidth;
  $shortDepth: $depth - $clipDepth;

  $halfShortWidth: 0.5 * $shortWidth;
  $halfShortDepth: 0.5 * $shortDepth;

  $halfClipWidth: 0.5 * $clipWidth;
  $halfClipDepth: 0.5 * $clipDepth;

  .back {
    width: $shortWidth;
    margin-left: -$halfShortWidth;
    @include transform(translate3d($halfClipWidth, -$halfHeight, -$halfDepth) rotateY(180deg));
  }

  .left {
    width: $shortDepth;
    margin-left: -$halfShortDepth;
    @include transform(translate3d(-$halfWidth, -$halfHeight, $halfClipDepth) rotateY(-90deg));
  }

  /**
   * If the clipWidth or clipDepth is 0,
   * don't change the dimensions of the top face.
   */
  @if $clipWidth != 0 and $clipDepth != 0 {
    .top {
      height: $shortDepth;
      margin-top: -$halfShortDepth;
      @include transform(translate3d(0, -$height, $halfClipDepth) rotateX(90deg));
    }

    // The shorter (width) top face.
    .short {
      width: $shortWidth;
      height: $clipDepth;

      margin-left: -$halfShortWidth;
      margin-top: -$halfClipDepth;

      @include transform(translate3d($halfClipWidth, -$height, -$halfShortDepth) rotateX(90deg));
    }
  }
}

@mixin building-edged-roof-missing-corner(
  $width, $height, $depth,
  $edgeWidth, $edgeHeight,
  $clipWidth, $clipDepth
) {
  @include building-edged-roof($width, $height, $depth, $edgeWidth, $edgeHeight);
  @include building-missing-corner($width, $height, $depth, $clipWidth, $clipDepth);

  $halfWidth:  0.5 * $width;
  $halfHeight: 0.5 * $height;
  $halfDepth:  0.5 * $depth;

  // Edged roof variables.
  $widthInterior: $width - 2 * $edgeWidth;
  $depthInterior: $depth - 2 * $edgeWidth;

  $halfWidthInterior: 0.5 * $widthInterior;
  $halfDepthInterior: 0.5 * $depthInterior;

  $halfEdgeWidth:  0.5 * $edgeWidth;
  $halfEdgeHeight: 0.5 * $edgeHeight;

  // Missing corner variables.
  $shortWidth: $width - $clipWidth;
  $shortDepth: $depth - $clipDepth;

  $halfShortWidth: 0.5 * $shortWidth;
  $halfShortDepth: 0.5 * $shortDepth;

  $halfClipWidth: 0.5 * $clipWidth;
  $halfClipDepth: 0.5 * $clipDepth;

  // Combination variables.
  $clipDepthInterior: $clipDepth - $edgeWidth;
  $halfClipDepthInterior: 0.5 * $clipDepthInterior;

  $shortWidthInterior: $shortWidth - $edgeWidth;
  $shortDepthInterior: $shortDepth - $edgeWidth;

  $halfShortWidthInterior: 0.5 * $shortWidthInterior;
  $halfShortDepthInterior: 0.5 * $shortDepthInterior;

  @if $clipWidth != 0 and $clipDepth != 0 {
    .top {
      width:  $widthInterior;
      height: $shortDepthInterior;

      margin-left: -$halfWidthInterior;
      margin-top:  -$halfShortDepthInterior;

      @include transform(translate3d(0, -$height + $edgeHeight, $halfClipDepth - $halfEdgeWidth) rotateX(90deg));
    }

    .short {
      width: $shortWidthInterior;
      height: $clipDepthInterior;

      margin-left: -$halfShortWidthInterior;
      margin-top: -$halfClipDepthInterior;

      @include transform(translate3d($halfClipWidth - $halfEdgeWidth, -$height + $edgeHeight, -$halfShortDepthInterior) rotateX(90deg));
    }

    // Faces on the top of the buildng edge.
    $x-top: $halfWidth - $halfEdgeWidth;
    $z-top: $halfDepth - $halfEdgeWidth;

    .back-top {
      width: $shortWidth;
      margin-left: -$halfShortWidth;
      @include transform(translate3d($halfClipWidth, -$height, -$z-top) rotateX(90deg) rotateZ(180deg));
    }

    .left-top {
      width: $shortDepthInterior;
      margin-left: -$halfShortDepthInterior;
      @include transform(translate3d(-$x-top, -$height, $halfClipDepth - $halfEdgeWidth) rotateX(90deg) rotateZ(90deg));
    }


    // Faces on the interior of the building edge.
    $y-interior: -$height + $halfEdgeHeight;

    .back-interior {
      width: $shortWidthInterior;
      margin-left: -$halfShortWidthInterior;
      @include transform(translate3d($halfClipWidth - $halfEdgeWidth, $y-interior, -$halfDepthInterior) rotateY(0deg));
    }

    .left-interior {
      width: $shortDepthInterior;
      margin-left: -$halfShortDepthInterior;
      @include transform(translate3d(-$halfWidthInterior, $y-interior, $halfClipDepth - $halfEdgeWidth) rotateY( 90deg));
    }
  }
}
